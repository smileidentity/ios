name: Lint Build and Test

on:
  pull_request:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v5
      - name: SwiftFormat Lint
        uses: docker://ghcr.io/nicklockwood/swiftformat:latest
        with:
          args: --lint .
      - name: Danger
        uses: docker://ghcr.io/danger/danger-swift-with-swiftlint:3.15.0
        with:
          args: --failOnErrors --no-publish-check
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: "Build App and Run Unit Tests"
    runs-on: macos-15
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Write Smile Config
        id: write_smile_config
        # Mask the config so that it doesn't show up in the logs
        run: |
          INPUT_SMILE_CONFIG=$(jq -r '.inputs.smile_config // empty' $GITHUB_EVENT_PATH)
          echo "::add-mask::$INPUT_SMILE_CONFIG"
          if [ -n "$INPUT_SMILE_CONFIG" ]; then
            SMILE_CONFIG="$INPUT_SMILE_CONFIG"
          else
            SMILE_CONFIG="$SMILE_CONFIG_PARTNER_002"
          fi
          echo "$SMILE_CONFIG" > smile_config.json
          PARTNER_ID=$(jq -r '.partner_id' smile_config.json)
          echo "partner_id=$PARTNER_ID" >> $GITHUB_OUTPUT
        env:
          SMILE_CONFIG_PARTNER_002: ${{ secrets.SMILE_CONFIG_PARTNER_002 }}
      - name: Add Smile Config to Xcode Project
        run: ruby add_smile_config.rb
      - name: Setup Environment
        uses: ./.github/actions/setup
        with:
          xcode: "16.4"
          install-mint: "false"
      - name: Verify active Xcode
        run: |
          echo "Current developer directory: $(xcode-select -p)"
          ls -1 /Applications | grep Xcode || true
      - name: Cache SwiftPM
        uses: actions/cache@v4
        with:
          path: |
            ~/.swiftpm
            ~/Library/Caches/org.swift.swiftpm
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: ${{ runner.os }}-spm-
      - name: Cache CocoaPods (validator downloads)
        uses: actions/cache@v4
        with:
          path: |
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-cocoapods-${{ hashFiles('SmileID.podspec') }}
          restore-keys: ${{ runner.os }}-cocoapods-
      - name: Build Example app and Run Unit Tests
        run: |
          xcodebuild -resolvePackageDependencies
          rake lint:podspec
          rake test:package
        env:
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          SKIP_DERIVEDDATA_CLEAN: "1"
          COCOAPODS_DISABLE_STATS: "true"
